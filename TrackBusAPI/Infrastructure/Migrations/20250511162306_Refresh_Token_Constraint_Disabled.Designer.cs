// <auto-generated />
using System;
using Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250511162306_Refresh_Token_Constraint_Disabled")]
    partial class Refresh_Token_Constraint_Disabled
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Domain.CompanyAggregate.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("CompanyPassword")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CompanyUsername")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyUsername")
                        .IsUnique();

                    b.ToTable("Company");
                });

            modelBuilder.Entity("Domain.DriverAggregate.Driver", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CompanyId")
                        .HasColumnType("integer");

                    b.Property<string>("DriverName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("DriverPassword")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Driver");
                });

            modelBuilder.Entity("Domain.RefreshToken.RefreshToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Expires")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("RevokedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserAgent")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.HasKey("Id");

                    b.HasIndex("Expires");

                    b.HasIndex("Expires", "RevokedAt");

                    b.ToTable("RefreshToken");
                });

            modelBuilder.Entity("Domain.DriverAggregate.Driver", b =>
                {
                    b.HasOne("Domain.CompanyAggregate.Company", null)
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.RefreshToken.RefreshToken", b =>
                {
                    b.OwnsOne("Domain.RefreshToken.ConsumerIdentity", "ConsumerIdentity", b1 =>
                        {
                            b1.Property<int>("RefreshTokenId")
                                .HasColumnType("integer");

                            b1.Property<int?>("CompanyId")
                                .HasColumnType("integer")
                                .HasColumnName("CompanyId");

                            b1.Property<int?>("DriverId")
                                .HasColumnType("integer")
                                .HasColumnName("DriverId");

                            b1.HasKey("RefreshTokenId");

                            b1.HasIndex("CompanyId");

                            b1.HasIndex("DriverId");

                            b1.ToTable("RefreshToken");

                            b1.HasOne("Domain.CompanyAggregate.Company", null)
                                .WithMany()
                                .HasForeignKey("CompanyId")
                                .OnDelete(DeleteBehavior.Cascade);

                            b1.HasOne("Domain.DriverAggregate.Driver", null)
                                .WithMany()
                                .HasForeignKey("DriverId")
                                .OnDelete(DeleteBehavior.Cascade);

                            b1.WithOwner()
                                .HasForeignKey("RefreshTokenId");
                        });

                    b.Navigation("ConsumerIdentity")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
