services:
  frontend:
    build:
      context: ./TrackBusFrontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://webapi:8080
    volumes:
      - ./TrackBusFrontend:/app
      - /app/node_modules
    depends_on:
      - webapi
    restart: unless-stopped

  webapi:
    build:
      context: "./TrackBusAPI"
      dockerfile: "WebAPI/Dockerfile"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__DatabaseConnection=Host=db;Port=5432;Database=trackbus;Username=postgres;Password=root
    ports:
      - "8080:8080"  # Mapira host 8080 na container 8080 (kao u Dockerfile)
      - "8081:8081"  # Za HTTPS ako bude potrebno
    volumes:
      - ./:/src  # Za development, omogućava live reload
      - ~/.aspnet/https:/https  # Za HTTPS certifikate
    depends_on:
      - db
    restart: unless-stopped

  db:
    container_name: db
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
      POSTGRES_DB: trackbus
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5433:5432"  # Ekspozicija za lakši debug
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d trackbus"]
      interval: 5s
      timeout: 5s
      retries: 10
volumes:
  pgdata: